import React from "react";
import { View, Text, TouchableOpacity, Alert } from "react-native";
import {
  DrawerContentScrollView,
  DrawerItemList,
  createDrawerNavigator,
} from "@react-navigation/drawer";
import { createStackNavigator } from "@react-navigation/stack";
import { NavigationContainer } from "@react-navigation/native";
import Icon from "react-native-vector-icons/FontAwesome";
import TrangChuAdmin from "../screens/(Admin)/TrangChuAdmin";
import QuanLyNguoiDung from "../screens/(Admin)/QuanLyNguoiDung";
import SuaNguoiDung from "../module/user/SuaNguoiDung";
import BackButton from "../components/BackButton";
import color from "../utils/color";
import HeaderLeft from "../components/HeaderLeft";
import HeaderPlusIcon from "../components/HeaderRightPlus";
import ThemNguoiDung from "../module/user/ThemNguoiDung";

// üè† C√°c m√†n h√¨nh qu·∫£n l√Ω Admin
function AdminHomeScreen() {
  return (
    <Stack.Navigator
      screenOptions={({ navigation }) => ({
        headerStyle: {
          height: 110,
        },
        // eaderTitle: "",
        headerTitle: "", // ·∫®n ti√™u ƒë·ªÅ m·∫∑c ƒë·ªãnh
        headerLeft: () => (
          <HeaderLeft title="Trang ch·ªß" navigation={navigation}></HeaderLeft>
        ),
      })}
    >
      <Stack.Screen
        name="TrangChuAdmin"
        component={TrangChuAdmin}
        options={{
          title: "Trang ch·ªß",
        }}
      />
    </Stack.Navigator>
  );

  // <TrangChuAdmin></TrangChuAdmin>;
}
function UserManagementScreen() {
  return (
    <Stack.Navigator
      screenOptions={({ navigation }) => ({
        headerStyle: {
          height: 110,
        },
        // eaderTitle: "",
        headerTitle: "", // ·∫®n ti√™u ƒë·ªÅ m·∫∑c ƒë·ªãnh
        headerLeft: () => (
          <HeaderLeft
            title="Qu·∫£n l√Ω ng∆∞·ªùi d√πng"
            navigation={navigation}
          ></HeaderLeft>
        ),
        headerRight: () => (
          <HeaderPlusIcon navigation={navigation} destination="ThemNguoiDung" />
        ),
      })}
    >
      <Stack.Screen
        name="QuanLyNguoiDung"
        component={QuanLyNguoiDung}
        options={{
          title: "Qu·∫£n l√Ω Ng∆∞·ªùi d√πng",
        }}
      />
      <Stack.Screen
        name="SuaNguoiDung"
        component={SuaNguoiDung}
        options={{
          headerShown: false,
          headerTitle: "S·ª≠a ng∆∞·ªùi d√πng", // Th√™m l·∫°i ti√™u ƒë·ªÅ\
          headerStyle: {
            backgroundColor: color.mainColor, // M√†u xanh cho header
          },
          headerTitleStyle: {
            fontSize: 18,
          },
          headerShown: false,
          headerTintColor: color.white, // M√†u ch·ªØ tr·∫Øng ƒë·ªÉ d·ªÖ ƒë·ªçc
          headerLeft: () => <BackButton />, // Thay menu b·∫±ng n√∫t quay l·∫°i
        }}
      />
      <Stack.Screen
        name="ThemNguoiDung"
        component={ThemNguoiDung}
        options={{
          headerShown: false,
          headerTitle: "Th√™m ng∆∞·ªùi d√πng", // Th√™m l·∫°i ti√™u ƒë·ªÅ\
          headerStyle: {
            backgroundColor: color.mainColor, // M√†u xanh cho header
          },
          headerTitleStyle: {
            fontSize: 18,
          },
          headerShown: false,
          headerTintColor: color.white, // M√†u ch·ªØ tr·∫Øng ƒë·ªÉ d·ªÖ ƒë·ªçc
          headerLeft: () => <BackButton />, // Thay menu b·∫±ng n√∫t quay l·∫°i
        }}
      />
    </Stack.Navigator>
  );
}
function TopicManagementScreen() {
  return <Text>Qu·∫£n l√Ω ƒë·ªÅ t√†i</Text>;
}
function TaskManagementScreen() {
  return <Text>Qu·∫£n l√Ω c√¥ng vi·ªác</Text>;
}
function ReviewManagementScreen() {
  return <Text>Qu·∫£n l√Ω ƒë√°nh gi√°</Text>;
}
function DocumentManagementScreen() {
  return <Text>Qu·∫£n l√Ω t√†i li·ªáu</Text>;
}
function NotificationScreen() {
  return <Text>Th√¥ng b√°o</Text>;
}

// üõ† Custom Drawer (th√™m ch·ª©c nƒÉng ƒêƒÉng xu·∫•t)
const CustomDrawer = (props) => {
  const { setUserRole, navigation } = props; // Nh·∫≠n setUserRole t·ª´ props

  const handleLogout = () => {
    props.setUserRole(null);
    // onPress: () => {
    //         props.setUserRole(null); // üèÅ C·∫≠p nh·∫≠t userRole -> Quay v·ªÅ m√†n h√¨nh ƒëƒÉng nh·∫≠p
    //       },
    // Alert.alert(
    //   "X√°c nh·∫≠n",
    //   "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t?",
    //   [
    //     { text: "H·ªßy", style: "cancel" },
    //     {
    //       text: "ƒêƒÉng xu·∫•t",
    //       onPress: () => {
    //         props.setUserRole(null); // üèÅ C·∫≠p nh·∫≠t userRole -> Quay v·ªÅ m√†n h√¨nh ƒëƒÉng nh·∫≠p
    //       },
    //     },
    //   ],
    //   { cancelable: true }
    // );
  };

  return (
    <DrawerContentScrollView {...props}>
      <DrawerItemList {...props} />
      <TouchableOpacity onPress={handleLogout} style={{ padding: 16 }}>
        <Text style={{ color: "red", fontWeight: "bold" }}>ƒêƒÉng xu·∫•t</Text>
      </TouchableOpacity>
    </DrawerContentScrollView>
  );
};

// üìå Drawer Navigator
const Drawer = createDrawerNavigator();
const Stack = createStackNavigator();

const AdminNavigator = ({ setUserRole }) => {
  return (
    <Drawer.Navigator
      drawerContent={(props) => (
        <CustomDrawer {...props} setUserRole={setUserRole} />
      )}
      screenOptions={{
        headerShown: false,
        drawerStyle: { backgroundColor: "#fff", width: 250 },
        drawerActiveTintColor: "#007bff",
        drawerInactiveTintColor: "#333",
      }}
    >
      <Drawer.Screen
        name="AdminHome"
        component={AdminHomeScreen}
        options={{
          title: "Trang ch·ªß",
          drawerIcon: ({ color, size }) => (
            <Icon name="home" size={size} color={color} />
          ),
        }}
      />
      <Drawer.Screen
        name="UserManagement"
        component={UserManagementScreen}
        options={{
          headerShown: false,
          title: "Qu·∫£n l√Ω Ng∆∞·ªùi d√πng",
          drawerIcon: ({ color, size }) => (
            <Icon name="users" size={size} color={color} />
          ),
        }}
      />
      <Drawer.Screen
        name="TopicManagement"
        component={TopicManagementScreen}
        options={{
          title: "Qu·∫£n l√Ω ƒê·ªÅ t√†i",
          drawerIcon: ({ color, size }) => (
            <Icon name="file-text" size={size} color={color} />
          ),
        }}
      />
      <Drawer.Screen
        name="TaskManagement"
        component={TaskManagementScreen}
        options={{
          title: "Qu·∫£n l√Ω C√¥ng vi·ªác",
          drawerIcon: ({ color, size }) => (
            <Icon name="tasks" size={size} color={color} />
          ),
        }}
      />
      <Drawer.Screen
        name="ReviewManagement"
        component={ReviewManagementScreen}
        options={{
          title: "Qu·∫£n l√Ω ƒê√°nh gi√°",
          drawerIcon: ({ color, size }) => (
            <Icon name="star" size={size} color={color} />
          ),
        }}
      />
      <Drawer.Screen
        name="DocumentManagement"
        component={DocumentManagementScreen}
        options={{
          title: "Qu·∫£n l√Ω T√†i li·ªáu",
          drawerIcon: ({ color, size }) => (
            <Icon name="folder" size={size} color={color} />
          ),
        }}
      />
      <Drawer.Screen
        name="Notification"
        component={NotificationScreen}
        options={{
          title: "Th√¥ng b√°o",
          drawerIcon: ({ color, size }) => (
            <Icon name="bell" size={size} color={color} />
          ),
        }}
      />
    </Drawer.Navigator>
  );
};

export default AdminNavigator;
